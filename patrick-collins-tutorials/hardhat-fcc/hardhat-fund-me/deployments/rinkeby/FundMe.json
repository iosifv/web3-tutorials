{
  "address": "0x278D7c942B4F0347CE15B29f3D3340530218f576",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumInEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x114bb7a7f7e991ccd1dcbb9236479295784e15061e1fc7228b4fccb16d1a7048",
  "receipt": {
    "to": null,
    "from": "0xA3cFFf542135905284f6D51077681a5744103D78",
    "contractAddress": "0x278D7c942B4F0347CE15B29f3D3340530218f576",
    "transactionIndex": 7,
    "gasUsed": "904780",
    "logsBloom": "0x
    "blockHash": "0x579265ea66a493f3090c256225b12651dc2edc912a031889a9fb81bc0dffcd76",
    "transactionHash": "0x114bb7a7f7e991ccd1dcbb9236479295784e15061e1fc7228b4fccb16d1a7048",
    "logs": [],
    "blockNumber": 10915564,
    "cumulativeGasUsed": "4395272",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "3468211dcc5bf545629f681cc0248e41",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumInEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\n// Eth Gas price = 18 gwei\\n// Creation cost: 852846 gas / 15351228 gwei / $16.69\\n// Creation cost: 834167 gas / 15015006 gwei / $16.32 => after I added constant\\n// Creation cost: 810600 gas / 14590800 gwei / $15.86 => after made variable immutable\\n// Creation cost: 785482 gas / 14138676 gwei / $15.37 => after adding error NotOwner()\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 5 * 1e18;\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    address public /* immutable */ owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        // require(getConversionRate(msg.value) >= MINIMUM_USD, \\\"Didn't send enough!\\\");\\n        require(\\n            // Cool thing here is that msg.value is the first parameter of getConversionRate()\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough!\\\"\\n        );\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function minimumInEth() public view returns (uint256) {\\n        return MINIMUM_USD.getConversionRate(priceFeed);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        // reset the array of funders:\\n        // initialise the variable with a new address array of 0 elements\\n        funders = new address[](0);\\n\\n        // withdraw the funds in 3ways: transfer / send / call\\n\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed!\\\");\\n\\n        // call\\n        (bool callSuccess, ) = /* bytes memory dataReturned */\\n        payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed!\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner, \\\"Sender is not owner!\\\");\\n        if (msg.sender != owner) {\\n            revert NotOwner();\\n        }\\n        _;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x85e6892775eba202cbf7b735c69c6c687c8447824e9b8a72072f391e89ee984e\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\n// https://www.npmjs.com/package/@chainlink/contracts\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (\\n            ,\\n            /*uint80 roundID*/\\n            int256 price, /*uint startedAt*/ /*uint timeStamp*/ /*uint80 answeredInRound*/\\n            ,\\n            ,\\n\\n        ) = priceFeed.latestRoundData();\\n        // ETH in terms of USD\\n\\n        // need to match the decimals of msg.sender\\n        return uint256(price * 1e10); // 1**10 == 10000000000\\n    }\\n\\n    function getVersion() internal view returns (uint256) {\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n            0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n        );\\n        return priceFeed.version();\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x4838b579136cb2ff96c52a731db35bc0e222f1491e6d3cae03b0aa7814fadd2f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405162000ff038038062000ff08339818101604052810190610034919061011f565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ec826100c1565b9050919050565b6100fc816100e1565b811461010757600080fd5b50565b600081519050610119816100f3565b92915050565b600060208284031215610135576101346100bc565b5b60006101438482850161010a565b91505092915050565b610e94806200015c6000396000f3fe60806040526004361061007f5760003560e01c80638da5cb5b1161004e5780638da5cb5b14610142578063a9d4600a1461016d578063b60d428814610198578063dc0d3dff146101a25761008e565b80633ccfd60b146100985780633e47d6f3146100af5780636b69a592146100ec578063741bef1a146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610307565b005b3480156100bb57600080fd5b506100d660048036038101906100d19190610822565b610549565b6040516100e39190610868565b60405180910390f35b3480156100f857600080fd5b50610101610561565b60405161010e9190610868565b60405180910390f35b34801561012357600080fd5b5061012c61056d565b60405161013991906108e2565b60405180910390f35b34801561014e57600080fd5b50610157610593565b604051610164919061090c565b60405180910390f35b34801561017957600080fd5b506101826105b9565b60405161018f9190610868565b60405180910390f35b6101a06101df565b005b3480156101ae57600080fd5b506101c960048036038101906101c49190610953565b6105fd565b6040516101d6919061090c565b60405180910390f35b674563918244f4000061021d600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461063c90919063ffffffff16565b101561025e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610255906109dd565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461038e576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104395760008082815481106103b3576103b26109fd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061043190610a5b565b915050610391565b50600067ffffffffffffffff81111561045557610454610aa4565b5b6040519080825280602002602001820160405280156104835781602001602082028036833780820191505090505b5060009080519060200190610499929190610718565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104c090610b04565b60006040518083038185875af1925050503d80600081146104fd576040519150601f19603f3d011682016040523d82523d6000602084013e610502565b606091505b5050905080610546576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053d90610b65565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b674563918244f4000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006105f8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16674563918244f4000061063c90919063ffffffff16565b905090565b6000818154811061060d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061064883610678565b90506000670de0b6b3a764000085836106619190610b85565b61066b9190610c0e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106c157600080fd5b505afa1580156106d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f99190610ccc565b5050509150506402540be400816107109190610d47565b915050919050565b828054828255906000526020600020908101928215610791579160200282015b828111156107905782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610738565b5b50905061079e91906107a2565b5090565b5b808211156107bb5760008160009055506001016107a3565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107ef826107c4565b9050919050565b6107ff816107e4565b811461080a57600080fd5b50565b60008135905061081c816107f6565b92915050565b600060208284031215610838576108376107bf565b5b60006108468482850161080d565b91505092915050565b6000819050919050565b6108628161084f565b82525050565b600060208201905061087d6000830184610859565b92915050565b6000819050919050565b60006108a86108a361089e846107c4565b610883565b6107c4565b9050919050565b60006108ba8261088d565b9050919050565b60006108cc826108af565b9050919050565b6108dc816108c1565b82525050565b60006020820190506108f760008301846108d3565b92915050565b610906816107e4565b82525050565b600060208201905061092160008301846108fd565b92915050565b6109308161084f565b811461093b57600080fd5b50565b60008135905061094d81610927565b92915050565b600060208284031215610969576109686107bf565b5b60006109778482850161093e565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b60006109c7601383610980565b91506109d282610991565b602082019050919050565b600060208201905081810360008301526109f6816109ba565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a668261084f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a9957610a98610a2c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610aee600083610ad3565b9150610af982610ade565b600082019050919050565b6000610b0f82610ae1565b9150819050919050565b7f43616c6c206661696c6564210000000000000000000000000000000000000000600082015250565b6000610b4f600c83610980565b9150610b5a82610b19565b602082019050919050565b60006020820190508181036000830152610b7e81610b42565b9050919050565b6000610b908261084f565b9150610b9b8361084f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bd457610bd3610a2c565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c198261084f565b9150610c248361084f565b925082610c3457610c33610bdf565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c5e81610c3f565b8114610c6957600080fd5b50565b600081519050610c7b81610c55565b92915050565b6000819050919050565b610c9481610c81565b8114610c9f57600080fd5b50565b600081519050610cb181610c8b565b92915050565b600081519050610cc681610927565b92915050565b600080600080600060a08688031215610ce857610ce76107bf565b5b6000610cf688828901610c6c565b9550506020610d0788828901610ca2565b9450506040610d1888828901610cb7565b9350506060610d2988828901610cb7565b9250506080610d3a88828901610c6c565b9150509295509295909350565b6000610d5282610c81565b9150610d5d83610c81565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d9c57610d9b610a2c565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610dd957610dd8610a2c565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e1657610e15610a2c565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e5357610e52610a2c565b5b82820290509291505056fea26469706673582212200da99618c9cb3ef316565749b588d4a9adb09a49716b2624eb52bb969564b1ea64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80638da5cb5b1161004e5780638da5cb5b14610142578063a9d4600a1461016d578063b60d428814610198578063dc0d3dff146101a25761008e565b80633ccfd60b146100985780633e47d6f3146100af5780636b69a592146100ec578063741bef1a146101175761008e565b3661008e5761008c6101df565b005b6100966101df565b005b3480156100a457600080fd5b506100ad610307565b005b3480156100bb57600080fd5b506100d660048036038101906100d19190610822565b610549565b6040516100e39190610868565b60405180910390f35b3480156100f857600080fd5b50610101610561565b60405161010e9190610868565b60405180910390f35b34801561012357600080fd5b5061012c61056d565b60405161013991906108e2565b60405180910390f35b34801561014e57600080fd5b50610157610593565b604051610164919061090c565b60405180910390f35b34801561017957600080fd5b506101826105b9565b60405161018f9190610868565b60405180910390f35b6101a06101df565b005b3480156101ae57600080fd5b506101c960048036038101906101c49190610953565b6105fd565b6040516101d6919061090c565b60405180910390f35b674563918244f4000061021d600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461063c90919063ffffffff16565b101561025e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610255906109dd565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461038e576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104395760008082815481106103b3576103b26109fd565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061043190610a5b565b915050610391565b50600067ffffffffffffffff81111561045557610454610aa4565b5b6040519080825280602002602001820160405280156104835781602001602082028036833780820191505090505b5060009080519060200190610499929190610718565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104c090610b04565b60006040518083038185875af1925050503d80600081146104fd576040519150601f19603f3d011682016040523d82523d6000602084013e610502565b606091505b5050905080610546576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053d90610b65565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b674563918244f4000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006105f8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16674563918244f4000061063c90919063ffffffff16565b905090565b6000818154811061060d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061064883610678565b90506000670de0b6b3a764000085836106619190610b85565b61066b9190610c0e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106c157600080fd5b505afa1580156106d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f99190610ccc565b5050509150506402540be400816107109190610d47565b915050919050565b828054828255906000526020600020908101928215610791579160200282015b828111156107905782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610738565b5b50905061079e91906107a2565b5090565b5b808211156107bb5760008160009055506001016107a3565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107ef826107c4565b9050919050565b6107ff816107e4565b811461080a57600080fd5b50565b60008135905061081c816107f6565b92915050565b600060208284031215610838576108376107bf565b5b60006108468482850161080d565b91505092915050565b6000819050919050565b6108628161084f565b82525050565b600060208201905061087d6000830184610859565b92915050565b6000819050919050565b60006108a86108a361089e846107c4565b610883565b6107c4565b9050919050565b60006108ba8261088d565b9050919050565b60006108cc826108af565b9050919050565b6108dc816108c1565b82525050565b60006020820190506108f760008301846108d3565b92915050565b610906816107e4565b82525050565b600060208201905061092160008301846108fd565b92915050565b6109308161084f565b811461093b57600080fd5b50565b60008135905061094d81610927565b92915050565b600060208284031215610969576109686107bf565b5b60006109778482850161093e565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b60006109c7601383610980565b91506109d282610991565b602082019050919050565b600060208201905081810360008301526109f6816109ba565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a668261084f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a9957610a98610a2c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610aee600083610ad3565b9150610af982610ade565b600082019050919050565b6000610b0f82610ae1565b9150819050919050565b7f43616c6c206661696c6564210000000000000000000000000000000000000000600082015250565b6000610b4f600c83610980565b9150610b5a82610b19565b602082019050919050565b60006020820190508181036000830152610b7e81610b42565b9050919050565b6000610b908261084f565b9150610b9b8361084f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bd457610bd3610a2c565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c198261084f565b9150610c248361084f565b925082610c3457610c33610bdf565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c5e81610c3f565b8114610c6957600080fd5b50565b600081519050610c7b81610c55565b92915050565b6000819050919050565b610c9481610c81565b8114610c9f57600080fd5b50565b600081519050610cb181610c8b565b92915050565b600081519050610cc681610927565b92915050565b600080600080600060a08688031215610ce857610ce76107bf565b5b6000610cf688828901610c6c565b9550506020610d0788828901610ca2565b9450506040610d1888828901610cb7565b9350506060610d2988828901610cb7565b9250506080610d3a88828901610c6c565b9150509295509295909350565b6000610d5282610c81565b9150610d5d83610c81565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d9c57610d9b610a2c565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610dd957610dd8610a2c565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e1657610e15610a2c565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e5357610e52610a2c565b5b82820290509291505056fea26469706673582212200da99618c9cb3ef316565749b588d4a9adb09a49716b2624eb52bb969564b1ea64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
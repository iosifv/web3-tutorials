{
    "address": "0x9B62380018030FE48149906B20F21A05AD4Ab1Ad",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "priceFeedAddress",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "FundMe__NotOwner",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "MINIMUM_USD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cheaperWithdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "funder",
                    "type": "address"
                }
            ],
            "name": "getAddressToAmountFunded",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "getFunder",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getOwner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getPriceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "minimumInEth",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "transactionHash": "0xb026b772a1b3de42cee64f137832767e4d2936bc0d27db1c5fd1907ba7779bb0",
    "receipt": {
        "to": null,
        "from": "0xA3cFFf542135905284f6D51077681a5744103D78",
        "contractAddress": "0x9B62380018030FE48149906B20F21A05AD4Ab1Ad",
        "transactionIndex": 11,
        "gasUsed": "1049135",
        "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "blockHash": "0x3fcc463fcb2e23a577c48d2e24cf5de20c7f369620987dfe0c19bb91127d2f35",
        "transactionHash": "0xb026b772a1b3de42cee64f137832767e4d2936bc0d27db1c5fd1907ba7779bb0",
        "logs": [],
        "blockNumber": 10916574,
        "cumulativeGasUsed": "20371744",
        "status": 1,
        "byzantium": true
    },
    "args": ["0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"],
    "numDeployments": 2,
    "solcInputHash": "a433d12ab9f0cbd5f8fc5dd31858bfc5",
    "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumInEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"iosifv\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"@dev\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\nimport \\\"./PriceConverter.sol\\\";\\n\\n// Eth Gas price = 18 gwei\\n// Creation cost: 852846 gas / 15351228 gwei / $16.69\\n// Creation cost: 834167 gas / 15015006 gwei / $16.32 => after I added constant\\n// Creation cost: 810600 gas / 14590800 gwei / $15.86 => after made variable immutable\\n// Creation cost: 785482 gas / 14138676 gwei / $15.37 => after adding error NotOwner()\\n\\nerror FundMe__NotOwner();\\n\\n// Interfaces, Libraries, Contracts\\n\\n/** @title A contract for crowd funding\\n *  @author iosifv\\n *  @notice\\n *  @dev\\n */\\ncontract FundMe {\\n    // Type Declarations\\n    using PriceConverter for uint256;\\n\\n    // State Variables!\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 5 * 1e18;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner, \\\"Sender is not owner!\\\");\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    // receive() external payable {\\n    //     fund();\\n    // }\\n\\n    // fallback() external payable {\\n    //     fund();\\n    // }\\n\\n    function fund() public payable {\\n        // require(getConversionRate(msg.value) >= MINIMUM_USD, \\\"Didn't send enough!\\\");\\n        require(\\n            // Cool thing here is that msg.value is the first parameter of getConversionRate()\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough!\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function minimumInEth() public view returns (uint256) {\\n        return MINIMUM_USD.getConversionRate(s_priceFeed);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        // reset the array of funders:\\n        // initialise the variable with a new address array of 0 elements\\n        s_funders = new address[](0);\\n\\n        // withdraw the funds in 3ways: transfer / send / call\\n\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed!\\\");\\n\\n        // call\\n        (\\n            bool callSuccess, /* bytes memory dataReturned */\\n\\n        ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Transfer failed!\\\");\\n    }\\n\\n    function cheaperWithdraw() public onlyOwner {\\n        address[] memory funders = s_funders;\\n        // mappings can't be in memory...\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success, \\\"Transfer failed!\\\");\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x554eda9a8c421d0f72738bf44966d38c6435f16082706bd3a1329877b69df70a\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\n// https://www.npmjs.com/package/@chainlink/contracts\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (\\n            ,\\n            /*uint80 roundID*/\\n            int256 price, /*uint startedAt*/ /*uint timeStamp*/ /*uint80 answeredInRound*/\\n            ,\\n            ,\\n\\n        ) = priceFeed.latestRoundData();\\n        // ETH in terms of USD\\n\\n        // need to match the decimals of msg.sender\\n        return uint256(price * 1e10); // 1**10 == 10000000000\\n    }\\n\\n    function getVersion() internal view returns (uint256) {\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n            0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n        );\\n        return priceFeed.version();\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x4838b579136cb2ff96c52a731db35bc0e222f1491e6d3cae03b0aa7814fadd2f\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60a06040523480156200001157600080fd5b506040516200132438038062001324833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c61119e6200018660003960008181610233015281816104810152818161063c0152610832015261119e6000f3fe6080604052600436106100865760003560e01c80639e87a5cd116100595780639e87a5cd14610135578063a9d4600a14610160578063b60d42881461018b578063be2693f014610195578063d7b4750c146101ac57610086565b80630343fb251461008b5780633ccfd60b146100c85780636b69a592146100df578063893d20e81461010a575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610b2c565b6101e9565b6040516100bf9190610b72565b60405180910390f35b3480156100d457600080fd5b506100dd610231565b005b3480156100eb57600080fd5b506100f4610471565b6040516101019190610b72565b60405180910390f35b34801561011657600080fd5b5061011f61047d565b60405161012c9190610b9c565b60405180910390f35b34801561014157600080fd5b5061014a6104a5565b6040516101579190610c16565b60405180910390f35b34801561016c57600080fd5b506101756104cf565b6040516101829190610b72565b60405180910390f35b610193610513565b005b3480156101a157600080fd5b506101aa61063a565b005b3480156101b857600080fd5b506101d360048036038101906101ce9190610c5d565b6108fe565b6040516101e09190610b9c565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102b6576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610361576000600182815481106102dc576102db610c8a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061035990610ce8565b9150506102b9565b50600067ffffffffffffffff81111561037d5761037c610d31565b5b6040519080825280602002602001820160405280156103ab5781602001602082028036833780820191505090505b50600190805190602001906103c1929190610a22565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103e890610d91565b60006040518083038185875af1925050503d8060008114610425576040519150601f19603f3d011682016040523d82523d6000602084013e61042a565b606091505b505090508061046e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046590610e03565b60405180910390fd5b50565b674563918244f4000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061050e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16674563918244f4000061094690919063ffffffff16565b905090565b674563918244f40000610551600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461094690919063ffffffff16565b1015610592576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058990610e6f565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106bf576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561074357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106f9575b5050505050905060005b81518110156107cd57600082828151811061076b5761076a610c8a565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107c590610ce8565b91505061074d565b50600067ffffffffffffffff8111156107e9576107e8610d31565b5b6040519080825280602002602001820160405280156108175781602001602082028036833780820191505090505b506001908051906020019061082d929190610a22565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161087490610d91565b60006040518083038185875af1925050503d80600081146108b1576040519150601f19603f3d011682016040523d82523d6000602084013e6108b6565b606091505b50509050806108fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f190610e03565b60405180910390fd5b5050565b60006001828154811061091457610913610c8a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061095283610982565b90506000670de0b6b3a7640000858361096b9190610e8f565b6109759190610f18565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109cb57600080fd5b505afa1580156109df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a039190610fd6565b5050509150506402540be40081610a1a9190611051565b915050919050565b828054828255906000526020600020908101928215610a9b579160200282015b82811115610a9a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a42565b5b509050610aa89190610aac565b5090565b5b80821115610ac5576000816000905550600101610aad565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610af982610ace565b9050919050565b610b0981610aee565b8114610b1457600080fd5b50565b600081359050610b2681610b00565b92915050565b600060208284031215610b4257610b41610ac9565b5b6000610b5084828501610b17565b91505092915050565b6000819050919050565b610b6c81610b59565b82525050565b6000602082019050610b876000830184610b63565b92915050565b610b9681610aee565b82525050565b6000602082019050610bb16000830184610b8d565b92915050565b6000819050919050565b6000610bdc610bd7610bd284610ace565b610bb7565b610ace565b9050919050565b6000610bee82610bc1565b9050919050565b6000610c0082610be3565b9050919050565b610c1081610bf5565b82525050565b6000602082019050610c2b6000830184610c07565b92915050565b610c3a81610b59565b8114610c4557600080fd5b50565b600081359050610c5781610c31565b92915050565b600060208284031215610c7357610c72610ac9565b5b6000610c8184828501610c48565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cf382610b59565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d2657610d25610cb9565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d7b600083610d60565b9150610d8682610d6b565b600082019050919050565b6000610d9c82610d6e565b9150819050919050565b600082825260208201905092915050565b7f5472616e73666572206661696c65642100000000000000000000000000000000600082015250565b6000610ded601083610da6565b9150610df882610db7565b602082019050919050565b60006020820190508181036000830152610e1c81610de0565b9050919050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610e59601383610da6565b9150610e6482610e23565b602082019050919050565b60006020820190508181036000830152610e8881610e4c565b9050919050565b6000610e9a82610b59565b9150610ea583610b59565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ede57610edd610cb9565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f2382610b59565b9150610f2e83610b59565b925082610f3e57610f3d610ee9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f6881610f49565b8114610f7357600080fd5b50565b600081519050610f8581610f5f565b92915050565b6000819050919050565b610f9e81610f8b565b8114610fa957600080fd5b50565b600081519050610fbb81610f95565b92915050565b600081519050610fd081610c31565b92915050565b600080600080600060a08688031215610ff257610ff1610ac9565b5b600061100088828901610f76565b955050602061101188828901610fac565b945050604061102288828901610fc1565b935050606061103388828901610fc1565b925050608061104488828901610f76565b9150509295509295909350565b600061105c82610f8b565b915061106783610f8b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110a6576110a5610cb9565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110e3576110e2610cb9565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156111205761111f610cb9565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561115d5761115c610cb9565b5b82820290509291505056fea2646970667358221220e525c39f1ce9e6fcfe6a17c1b8b6c2cf3e032691db7c3fd3ef4172866f77b3e164736f6c63430008080033",
    "deployedBytecode": "0x6080604052600436106100865760003560e01c80639e87a5cd116100595780639e87a5cd14610135578063a9d4600a14610160578063b60d42881461018b578063be2693f014610195578063d7b4750c146101ac57610086565b80630343fb251461008b5780633ccfd60b146100c85780636b69a592146100df578063893d20e81461010a575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610b2c565b6101e9565b6040516100bf9190610b72565b60405180910390f35b3480156100d457600080fd5b506100dd610231565b005b3480156100eb57600080fd5b506100f4610471565b6040516101019190610b72565b60405180910390f35b34801561011657600080fd5b5061011f61047d565b60405161012c9190610b9c565b60405180910390f35b34801561014157600080fd5b5061014a6104a5565b6040516101579190610c16565b60405180910390f35b34801561016c57600080fd5b506101756104cf565b6040516101829190610b72565b60405180910390f35b610193610513565b005b3480156101a157600080fd5b506101aa61063a565b005b3480156101b857600080fd5b506101d360048036038101906101ce9190610c5d565b6108fe565b6040516101e09190610b9c565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102b6576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610361576000600182815481106102dc576102db610c8a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061035990610ce8565b9150506102b9565b50600067ffffffffffffffff81111561037d5761037c610d31565b5b6040519080825280602002602001820160405280156103ab5781602001602082028036833780820191505090505b50600190805190602001906103c1929190610a22565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103e890610d91565b60006040518083038185875af1925050503d8060008114610425576040519150601f19603f3d011682016040523d82523d6000602084013e61042a565b606091505b505090508061046e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046590610e03565b60405180910390fd5b50565b674563918244f4000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061050e600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16674563918244f4000061094690919063ffffffff16565b905090565b674563918244f40000610551600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461094690919063ffffffff16565b1015610592576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058990610e6f565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106bf576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561074357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106f9575b5050505050905060005b81518110156107cd57600082828151811061076b5761076a610c8a565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107c590610ce8565b91505061074d565b50600067ffffffffffffffff8111156107e9576107e8610d31565b5b6040519080825280602002602001820160405280156108175781602001602082028036833780820191505090505b506001908051906020019061082d929190610a22565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161087490610d91565b60006040518083038185875af1925050503d80600081146108b1576040519150601f19603f3d011682016040523d82523d6000602084013e6108b6565b606091505b50509050806108fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f190610e03565b60405180910390fd5b5050565b60006001828154811061091457610913610c8a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061095283610982565b90506000670de0b6b3a7640000858361096b9190610e8f565b6109759190610f18565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109cb57600080fd5b505afa1580156109df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a039190610fd6565b5050509150506402540be40081610a1a9190611051565b915050919050565b828054828255906000526020600020908101928215610a9b579160200282015b82811115610a9a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a42565b5b509050610aa89190610aac565b5090565b5b80821115610ac5576000816000905550600101610aad565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610af982610ace565b9050919050565b610b0981610aee565b8114610b1457600080fd5b50565b600081359050610b2681610b00565b92915050565b600060208284031215610b4257610b41610ac9565b5b6000610b5084828501610b17565b91505092915050565b6000819050919050565b610b6c81610b59565b82525050565b6000602082019050610b876000830184610b63565b92915050565b610b9681610aee565b82525050565b6000602082019050610bb16000830184610b8d565b92915050565b6000819050919050565b6000610bdc610bd7610bd284610ace565b610bb7565b610ace565b9050919050565b6000610bee82610bc1565b9050919050565b6000610c0082610be3565b9050919050565b610c1081610bf5565b82525050565b6000602082019050610c2b6000830184610c07565b92915050565b610c3a81610b59565b8114610c4557600080fd5b50565b600081359050610c5781610c31565b92915050565b600060208284031215610c7357610c72610ac9565b5b6000610c8184828501610c48565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cf382610b59565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d2657610d25610cb9565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d7b600083610d60565b9150610d8682610d6b565b600082019050919050565b6000610d9c82610d6e565b9150819050919050565b600082825260208201905092915050565b7f5472616e73666572206661696c65642100000000000000000000000000000000600082015250565b6000610ded601083610da6565b9150610df882610db7565b602082019050919050565b60006020820190508181036000830152610e1c81610de0565b9050919050565b7f4469646e27742073656e6420656e6f7567682100000000000000000000000000600082015250565b6000610e59601383610da6565b9150610e6482610e23565b602082019050919050565b60006020820190508181036000830152610e8881610e4c565b9050919050565b6000610e9a82610b59565b9150610ea583610b59565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ede57610edd610cb9565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f2382610b59565b9150610f2e83610b59565b925082610f3e57610f3d610ee9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f6881610f49565b8114610f7357600080fd5b50565b600081519050610f8581610f5f565b92915050565b6000819050919050565b610f9e81610f8b565b8114610fa957600080fd5b50565b600081519050610fbb81610f95565b92915050565b600081519050610fd081610c31565b92915050565b600080600080600060a08688031215610ff257610ff1610ac9565b5b600061100088828901610f76565b955050602061101188828901610fac565b945050604061102288828901610fc1565b935050606061103388828901610fc1565b925050608061104488828901610f76565b9150509295509295909350565b600061105c82610f8b565b915061106783610f8b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156110a6576110a5610cb9565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110e3576110e2610cb9565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156111205761111f610cb9565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561115d5761115c610cb9565b5b82820290509291505056fea2646970667358221220e525c39f1ce9e6fcfe6a17c1b8b6c2cf3e032691db7c3fd3ef4172866f77b3e164736f6c63430008080033",
    "devdoc": {
        "author": "iosifv",
        "kind": "dev",
        "methods": {},
        "title": "A contract for crowd funding",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {},
        "notice": "@dev",
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 58,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_addressToAmountFunded",
                "offset": 0,
                "slot": "0",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 61,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_funders",
                "offset": 0,
                "slot": "1",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 71,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_priceFeed",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(AggregatorV3Interface)45"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
                "encoding": "inplace",
                "label": "contract AggregatorV3Interface",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
